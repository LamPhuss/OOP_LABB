Q1: 
Suppose we are taking this Comparable interface approach .What class should implement the Comparable interface?
Ans:	  
class Media 

Q2: 
In those classes, how should you implement the compareTo() method be to reflect the ordering that we want?
Ans: 
@Override
public int compareTo(Media other) {
	return Comparator.comparing(Media::getTitle)
		.thenComparingDouble(Media::getCost()
		.compare(this, other);
	}

Q3: 
Can we have two ordering rules of the item (by title then cost and by cost then title) if we use this Comparable interface approach?
Ans:
No because title and cost have the same name 

Q4: 
Suppose the DVDs have a different ordering rule from other media types, that is by title, then decreasing length, then cost. How would you modify your code to allow this?
Ans:
@Override
public int compareTo(DigitalVideoDisc other) {
	return Comparator.comparing(DigitalVideoDisc::getTitle)
		.thenComparingInt(DigitalVideoDisc::getLength)
		.thenComparingDouble(DigitalVideoDisc::getCost)
		.comparing(this, other);
}
